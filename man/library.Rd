% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autos.R
\name{library}
\alias{library}
\title{Wrapper around library to place packages after any current autos}
\arguments{
\item{...}{pass directly through to base::library}

\item{pos}{see base::library. NULL (the default) is taken
to mean the earliest position of a package environment
within the current search path. If non-null, underlying
behavior of base::library is respected.}
}
\value{
returns (invisibly) the list of attached packages
}
\description{
Autos need to immediately follow the global environment.
This wrapper around \code{base::library()} will position any
attached packages in the earliest position on the
search path currently occupied by a package environment,
guaranteeing newly loaded packages appear before previously
loaded packages but after any currently attached non-packages.
}
\examples{
# Simple example
library(purrr)

# Illustrative example to show that autos will always remain above attached libraries
tmpdir <- tempdir()
print(tmpdir)

# account for windows
if (Sys.info()['sysname'] == "Windows") {
  tmpdir <- gsub("\\\\", "\\\\\\\\", tmpdir, fixed = TRUE)
}

# Create an example config file
hierarchy <- paste0("default:
  paths:
    functions: !expr list(
      DEV = file.path('",tmpdir,"', 'demo', 'DEV', 'username', 'project1', 'functions'),
      PROD = file.path('",tmpdir,"', 'demo', 'PROD', 'project1', 'functions'))
  autos:
    my_functions: !expr list(
      DEV = file.path('",tmpdir,"', 'demo', 'DEV', 'username', 'project1', 'functions'),
      PROD = file.path('",tmpdir,"', 'demo', 'PROD', 'project1', 'functions'))")


# write config
writeLines(hierarchy, file.path(tmpdir, "hierarchy.yml"))

config <- config::get(file = file.path(tmpdir, "hierarchy.yml"))

build_from_config(config)

# write function to DEV
writeLines("dev_function <- function() {print(environment(dev_function))}",
           file.path(tmpdir, 'demo/DEV/username/project1/functions/dev_function.r'))

# write function to PROD
writeLines("prod_function <- function() {print(environment(prod_function))}",
           file.path(tmpdir, 'demo/PROD/project1/functions/prod_function.r'))

# setup the environment
Sys.setenv(ENVSETUP_ENVIRON = "DEV")
rprofile(config::get(file = file.path(tmpdir, "hierarchy.yml")))

# show search
search()

# now attach purrr
library(purrr)

# see autos are still above purrr in the search path
search()
}
